stages:
# - build
  - validation
  - test_php71
  - test_php72
  - test_php73
#  - deploy
#  - performance

variables:
  MYSQL_DATABASE: "skeleton4"
  MYSQL_ROOT_PASSWORD: "supersecret"
  DATABASE_URL: "mysql://root:supersecret@mysql:3306/skeleton4"
  COMPOSER_CACHE_DIR: "/cache/php-composer"
  NPM_CONFIG_CACHE: "/cache/node-npm"
  BUNDLE_PATH: "/cache/ruby-gems"

before_script:
  - rm -f /usr/local/etc/php/conf.d/xdebug.ini
  - echo 'date.timezone=Europe/Moscow' >> /usr/local/etc/php/conf.d/extra.ini
  - echo 'memory_limit = 2G' >> /usr/local/etc/php/conf.d/extra.ini
  - sudo chown -R www-data:www-data ./

#frontend_build:
#  stage: build
#  image: node:8.11
#  before_script:
#    - rm -f /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Moscow /etc/localtime
#  script:
#    - npm install
#    - npm install gulp
#    - npm run dist
#    - chown -R www-data:www-data node_modules/
#    - chown -R www-data:www-data web/bundles/frontend/
#  artifacts:
#    name: "$CI_PIPELINE_ID"
#    when: on_success
#    expire_in: 1 week
#    paths:
#      - web/bundles/frontend/
#  cache:
#    key: ${CI_PROJECT_PATH_SLUG}
#    paths:
#      - node_modules/

validation_check:
  stage: validation
  image: kolyadin/php:72
  allow_failure: false
  dependencies: []
  script:
    - composer install --profile --prefer-dist --no-interaction --no-scripts
    - composer validate
    - bin/console doctrine:schema:validate --skip-sync
  cache:
    key: ${CI_PROJECT_PATH_SLUG}
    paths:
      - vendor/

security_check:
  stage: validation
  image: kolyadin/php:72
  allow_failure: true
  dependencies: []
  script:
    - composer install --profile --prefer-dist --no-interaction --no-scripts
    - ./vendor/bin/security-checker security:check
  cache: {}

.phpunit: &phpunit
  allow_failure: false
  script:
    - composer install --profile --prefer-dist -n
    - ./bin/setup-test.sh
    - ./bin/console doctrine:schema:validate
    - ./vendor/bin/simple-phpunit -c phpunit.xml
  cache:
    key: ${CI_PROJECT_PATH_SLUG}
    policy: pull
    paths:
      - vendor/

# -- PHP 7.1

phpunit_71_55:
  stage: test_php71
  image: kolyadin/php:71
  services:
    - mysql:5.5
  <<: *phpunit


phpunit_71_56:
  stage: test_php71
  image: kolyadin/php:71
  services:
    - mysql:5.6
  <<: *phpunit

phpunit_71_57:
  stage: test_php71
  image: kolyadin/php:71
  services:
    - mysql:5.7
  <<: *phpunit

phpunit_71_80:
  stage: test_php71
  image: kolyadin/php:71
  services:
    - name: mysql:8.0
      command: ["--default-authentication-plugin=mysql_native_password"]
  <<: *phpunit

# -- PHP 7.2

phpunit_72_55:
  stage: test_php72
  image: kolyadin/php:72
  allow_failure: false
  services:
    - mysql:5.5
  <<: *phpunit

phpunit_72_56:
  stage: test_php72
  image: kolyadin/php:72
  services:
    - mysql:5.6
  <<: *phpunit

phpunit_72_57:
  stage: test_php72
  image: kolyadin/php:72
  services:
    - mysql:5.7
  <<: *phpunit

phpunit_72_80:
  stage: test_php72
  image: kolyadin/php:72
  services:
    - name: mysql:8.0
      command: ["--default-authentication-plugin=mysql_native_password"]
  <<: *phpunit


# -- PHP 7.3

phpunit_73_55:
  stage: test_php73
  image: kolyadin/php:73
  services:
    - mysql:5.5
  <<: *phpunit

phpunit_73_56:
  stage: test_php73
  image: kolyadin/php:73
  services:
    - mysql:5.6
  <<: *phpunit

phpunit_73_57:
  stage: test_php73
  image: kolyadin/php:73
  services:
    - mysql:5.7
  <<: *phpunit

phpunit_73_80:
  stage: test_php73
  image: kolyadin/php:73
  services:
    - name: mysql:8.0
      command: ["--default-authentication-plugin=mysql_native_password"]
  <<: *phpunit

##
# Deploy
##
.deploy: &deploy
  stage: deploy
  image: kolyadin/ruby-rsync:alpine
  cache: {}
  before_script:
    - rm -f /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Moscow /etc/localtime
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
# dependencies:
#   - frontend_build
  tags:
    - deploy


#deploy_dev:
#  <<: *deploy
#  script:
#    - bundle install
#    - bundle exec cap dev deploy
#  only:
#    - dev
#
#deploy_stag:
#  <<: *deploy
#  script:
#    - bundle install
#    - bundle exec cap stag deploy
#  only:
#    - stag
#
#deploy_prod:
#  <<: *deploy
#  script:
#    - bundle install
#    - bundle exec cap prod deploy
#  only:
#    - master
#
###
## Performance
###
#.pagespeed: &pagespeed
#  stage: performance
#  image: kolyadin/google-pagespeed
#  before_script: []
#  variables:
#    GIT_STRATEGY: none
#  cache: {}
#  allow_failure: true
#  tags:
#    - performance
#
#pagespeed_stag:
#  <<: *pagespeed
#  script:
#    - psi --strategy desktop $STAG_ABSOLUTE_URL
#    - psi --strategy mobile $STAG_ABSOLUTE_URL
#  only:
#    - stag
#
#pagespeed_prod:
#  <<: *pagespeed
#  script:
#    - psi --strategy desktop $PROD_ABSOLUTE_URL
#    - psi --strategy mobile $PROD_ABSOLUTE_URL
#  only:
#    - master